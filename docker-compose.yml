services:
  api:
    build: 
      context: .
      dockerfile: src/MotoRent.Api/Dockerfile
    ports:
      - "8080:80"
    environment:
      - DOTNET_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=MotoRent;Username=postgres;Password=postgres
      - RabbitMQ__ConnectionString=amqp://motorent:motorent123@rabbitmq:5672/
      - RabbitMQ__Host=rabbitmq
      - RabbitMQ__User=motorent
      - RabbitMQ__Password=motorent123
      - Minio__Endpoint=minio:9000
      - Minio__AccessKey=minioadmin
      - Minio__SecretKey=minioadmin
      - Minio__Bucket=motorent-bucket
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
      minio:
        condition: service_started

  worker:
    build: 
      context: .
      dockerfile: src/MotoRent.Worker/Dockerfile
    environment:
      - DOTNET_ENVIRONMENT=Development
      - Logging__LogLevel__Default=Information
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=MotoRent;Username=postgres;Password=postgres
      - RabbitMQ__ConnectionString=amqp://motorent:motorent123@rabbitmq:5672/
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
      minio:
        condition: service_started
      api:
        condition: service_started
        
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: MotoRent
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: motorent
      RABBITMQ_DEFAULT_PASS: motorent123
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics check_port_connectivity | grep 5672"]
      interval: 10s
      timeout: 5s
      retries: 10

  minio:
    image: quay.io/minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data

  minio-init:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin) do echo '...waiting for minio...' && sleep 2; done;
      /usr/bin/mc mb -p myminio/motorent-bucket || true;
      /usr/bin/mc policy set public myminio/motorent-bucket;
      exit 0;
      "

volumes:
  postgres_data:
  minio_data: